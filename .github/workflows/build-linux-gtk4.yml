name: Build and Push Ubuntu-Rust-gtk4

on:
  workflow_dispatch:
  push:
    branches: [dev]
    paths:
      - "ubuntu-rust-gtk4/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: amd64
            arch: amd64
            gtk: 414
            codename: noble
          - platform: arm64
            arch: arm64v8
            gtk: 414
            codename: noble
          - platform: amd64
            arch: amd64
            gtk: 416
            codename: oracular
          - platform: arm64
            arch: arm64v8
            gtk: 416
            codename: oracular

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Github Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Metadata
        run: |
          echo "OWNER=${GITHUB_REPOSITORY_OWNER@L}" >> ${GITHUB_ENV}

      - name: Build and push gtk${{matrix.gtk}}-${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: ubuntu-rust-gtk4
          platforms: linux/${{ matrix.platform }}
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk${{matrix.gtk}}-${{ matrix.platform }}
          build-args: |
            ARCH=${{ matrix.arch }}
            CODENAME=${{matrix.codename}}
          provenance: false

  merge:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      fail-fast: false

    steps:
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Create multi-arch manifest on Docker Hub
      #   run: |
      #     docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-rust-gtk4:latest \
      #       ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-rust-gtk4:amd64 \
      #       ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-rust-gtk4:arm64
      #     docker manifest annotate ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-rust-gtk4:latest \
      #       ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-rust-gtk4:amd64 --arch amd64
      #     docker manifest annotate ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-rust-gtk4:latest \
      #       ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-rust-gtk4:arm64 --arch arm64
      #     docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-rust-gtk4:latest

      - name: Login to Github Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Metadata
        run: |
          echo "OWNER=${GITHUB_REPOSITORY_OWNER@L}" >> ${GITHUB_ENV}

      - name: Create multi-arch manifest gtk4.14
        run: |
          docker manifest create ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk414-latest \
            ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk414-amd64 \
            ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk414-arm64
          docker manifest annotate ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk414-latest \
            ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk414-amd64 --arch amd64
          docker manifest annotate ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk414-latest \
            ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk414-arm64 --arch arm64
          docker manifest push ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk414-latest

      - name: Create multi-arch manifest gtk4 latest
        run: |
          docker manifest create ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:latest \
            ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk416-amd64 \
            ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk416-arm64
          docker manifest annotate ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:latest \
            ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk416-amd64 --arch amd64
          docker manifest annotate ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:latest \
            ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk416-arm64 --arch arm64
          docker manifest push ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:latest
      - name: Check push
        run: |
          docker buildx imagetools inspect ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:latest
          docker buildx imagetools inspect ghcr.io/${{ env.OWNER }}/ubuntu-rust-gtk4:gtk414-latest
